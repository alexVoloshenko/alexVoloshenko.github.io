{"version":3,"sources":["components/task3/functions.js","components/task3/index.js","components/task3/task3.js","components/main/index.js","components/main/main.js","index.js"],"names":["functions","checkTriangle","data","firstSide","secondSide","thirdSide","suqares","p","Math","sqrt","compareTriangles","triangle1","triangle2","square","Task3","_default","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showResult","res","state","triangles","sort","console","log","addTriangle","isValidInputs","isTriangleValidName","triangle","triangleName","setState","concat","toConsumableArray","name","onNameChange","event","target","value","objectSpread","onSideChange","triangleSide","isTriangleValidSide","defineProperty","parseInt","str","length","match","num","isFinite","react_default","a","createElement","className","type","placeholder","onChange","onClick","Component","Main","task3","ReactDOM","render","main","document","getElementById"],"mappings":"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","file":"static/js/main.032822bc.chunk.js","sourcesContent":["const functions = {\r\n  checkTriangle: function (data) {\r\n    return ((data.firstSide < data.secondSide + data.thirdSide &&\r\n    data.secondSide < data.firstSide + data.thirdSide &&\r\n    data.thirdSide < data.firstSide + data.secondSide));\r\n  },\r\n\r\n  suqares: function (data) {\r\n    const p = (data.firstSide + data.secondSide + data.thirdSide) / 2;\r\n\r\n    return Math.sqrt(p * (p - data.firstSide) * (p - data.secondSide) * (p - data.thirdSide));\r\n  },\r\n\r\n  compareTriangles: function (triangle1, triangle2) {\r\n    return triangle1.square - triangle2.square;\r\n  }\r\n};\r\n\r\nexport default functions;","import Task3 from './task3';\r\n\r\nexport default Task3;","import React, {Component} from 'react';\r\nimport functions from './functions';\r\n\r\nexport default class extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      triangle: {},\r\n      triangles: [],\r\n      isValidInputs: false\r\n\r\n    };\r\n  }\r\n\r\n  showResult = () => {\r\n    let res = this.state.triangles.sort(functions.compareTriangles);\r\n    console.log(res);\r\n  };\r\n\r\n  addTriangle = () => {\r\n    if (this.state.isValidInputs && this.isTriangleValidName(this.state.triangle.triangleName)) {\r\n      const triangle = this.state.triangle;\r\n      if (functions.checkTriangle(triangle)) {\r\n        this.setState({\r\n          triangles: [...this.state.triangles, {\r\n            name: this.state.triangle.triangleName,\r\n            square: functions.suqares(triangle)\r\n          }]\r\n        }, this.showResult);\r\n\r\n      } else {\r\n        console.log(\"this triangle does not exist\");\r\n      }\r\n    } else {\r\n      console.log(\"please enter valid values\");\r\n    }\r\n  };\r\n\r\n  onNameChange = (event) => {\r\n    const triangleName = event.target.value;\r\n    if (this.isTriangleValidName(triangleName)) {\r\n      this.setState({\r\n        triangle: {\r\n          ...this.state.triangle,\r\n          triangleName: event.target.value\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  onSideChange = (event) => {\r\n    const triangleSide = event.target.name;\r\n    if (this.isTriangleValidSide(event.target.value)) {\r\n      this.setState({\r\n        triangle: {\r\n          ...this.state.triangle,\r\n          [triangleSide]: parseInt(event.target.value)\r\n        }\r\n      });\r\n      this.setState({isValidInputs: true});\r\n    } else {\r\n      this.setState({isValidInputs: false});\r\n    }\r\n  };\r\n\r\n  isTriangleValidName = (str) => {\r\n    return str.length === 3 && str.match(/[a-z]/i);\r\n  };\r\n\r\n  isTriangleValidSide = (num) => {\r\n    return isFinite(num);\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"task3-container\">\r\n        <span>3 letters - triangle name</span>\r\n        <input type=\"text\"\r\n               className=\"triangle-name\"\r\n               placeholder=\"Triangle name\"\r\n               onChange={this.onNameChange}/>\r\n        <span>sides - only numbers</span>\r\n        <input type=\"text\"\r\n               name=\"firstSide\"\r\n               className=\"triangle-side\"\r\n               placeholder=\"Triangle side A\"\r\n               onChange={this.onSideChange}/>\r\n        <input type=\"text\"\r\n               name=\"secondSide\"\r\n               className=\"triangle-side\"\r\n               placeholder=\"Triangle side B\"\r\n               onChange={this.onSideChange}/>\r\n        <input type=\"text\"\r\n               name=\"thirdSide\"\r\n               className=\"triangle-side\"\r\n               placeholder=\"Triangle side C\"\r\n               onChange={this.onSideChange}/>\r\n        <input className=\"sendTriangle\"\r\n               type=\"button\"\r\n               value=\"Add\"\r\n               onClick={this.addTriangle}/>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\n","import Main from './main';\r\n\r\nexport default Main;","import React, {Component} from 'react';\r\nimport Task3 from '../task3';\r\n\r\n\r\nexport default class extends Component {\r\n\r\n  render(){\r\n\r\n    return (\r\n      <div className=\"elementary-task\">\r\n        <Task3/>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './scss/style.scss';\r\n\r\n\r\n\r\nimport Main from './components/main';\r\n\r\nReactDOM.render(<Main />,\r\n  document.getElementById('root'));"],"sourceRoot":""}