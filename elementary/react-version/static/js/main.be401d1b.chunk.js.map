{"version":3,"sources":["components/task3/functions.js","components/task4/functions.js","components/task3/task3.js","components/task4/index.js","components/task4/task4.js","components/main/index.js","components/main/main.js","index.js"],"names":["functions","checkTriangle","data","firstSide","secondSide","thirdSide","suqares","p","Math","sqrt","compareTriangles","triangle1","triangle2","square","Component","isPalindrome","sub","len","length","i","palindromeExtraction","str","substring","palindroms","charAt","j","this","push","sort","a","b","Task4","_default","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","showResult","state","palindrome","console","log","onInputChange","event","isPalindromeValid","target","value","setState","match","react_default","createElement","className","type","placeholder","onChange","onClick","Main","task4","ReactDOM","render","main","document","getElementById"],"mappings":"8PAkBeA,EAlBG,CAChBC,cAAe,SAAUC,GACvB,OAASA,EAAKC,UAAYD,EAAKE,WAAaF,EAAKG,WACjDH,EAAKE,WAAaF,EAAKC,UAAYD,EAAKG,WACxCH,EAAKG,UAAYH,EAAKC,UAAYD,EAAKE,YAGzCE,QAAS,SAAUJ,GACjB,IAAMK,GAAKL,EAAKC,UAAYD,EAAKE,WAAaF,EAAKG,WAAa,EAEhE,OAAOG,KAAKC,KAAKF,GAAKA,EAAIL,EAAKC,YAAcI,EAAIL,EAAKE,aAAeG,EAAIL,EAAKG,aAGhFK,iBAAkB,SAAUC,EAAWC,GACrC,OAAOD,EAAUE,OAASD,EAAUC,SCazBb,GCxBcc,YDHX,CAChBC,aAAc,SAAUC,GAEtB,IADA,IAAMC,EAAMD,EAAIE,OAAS,EAChBC,EAAI,EAAGA,EAAIF,EAAM,EAAGE,IAC3B,GAAIH,EAAIG,KAAOH,EAAIC,EAAME,GACvB,OAAO,EAGX,OAAO,GAGTC,qBAAsB,SAAUC,GAG9B,IAFA,IACIC,EADAC,EAAa,GAERJ,EAAI,EAAGA,EAAIE,EAAIH,OAAQC,IAAK,CACnCG,EAAYD,EAAIG,OAAOL,GACvB,IAAK,IAAIM,EAAIN,EAAI,EAAGM,EAAIJ,EAAIH,OAAQO,IAClCH,GAAaD,EAAIG,OAAOC,GACpBC,KAAKX,aAAaO,IACpBC,EAAWI,KAAKL,GAItB,OAAOC,EAAWK,KAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEZ,OAASW,EAAEX,YErBnCa,cCEb,SAAAC,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAR,KAAAM,IACZC,EAAAC,OAAAE,EAAA,EAAAF,CAAAR,KAAAQ,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAZ,QAMFa,WAAa,WACkB,OAA1BN,EAAKO,MAAMC,YACZC,QAAQC,IAAI3C,EAAUoB,qBAAqBa,EAAKO,MAAMC,cAT5CR,EAadW,cAAgB,SAACC,GACXZ,EAAKa,kBAAkBD,EAAME,OAAOC,OACtCf,EAAKgB,SAAS,CAACR,WAAYI,EAAME,OAAOC,SAExCN,QAAQC,IAAI,6CACZV,EAAKgB,SAAS,CAACR,WAAY,SAlBjBR,EAuBda,kBAAoB,SAACzB,GACnB,OAAOA,EAAI6B,MAAM,UAtBjBjB,EAAKO,MAAQ,CACXC,WAAY,IAHFR,wEA6BZ,OACEkB,EAAAtB,EAAAuB,cAAA,OAAKC,UAAU,mBACbF,EAAAtB,EAAAuB,cAAA,0BACAD,EAAAtB,EAAAuB,cAAA,SAAOE,KAAK,OACLD,UAAU,gBACVE,YAAY,mBACZC,SAAU9B,KAAKkB,gBACtBO,EAAAtB,EAAAuB,cAAA,SAAOC,UAAU,eACVC,KAAK,SACLN,MAAM,QACNS,QAAS/B,KAAKa,qBAxCAzB,aCDd4C,mLCOX,OACEP,EAAAtB,EAAAuB,cAAA,OAAKC,UAAU,mBACbF,EAAAtB,EAAAuB,cAACO,EAAD,cANqB7C,aCG7B8C,IAASC,OAAOV,EAAAtB,EAAAuB,cAACU,EAAD,MACdC,SAASC,eAAe","file":"static/js/main.be401d1b.chunk.js","sourcesContent":["const functions = {\r\n  checkTriangle: function (data) {\r\n    return ((data.firstSide < data.secondSide + data.thirdSide &&\r\n    data.secondSide < data.firstSide + data.thirdSide &&\r\n    data.thirdSide < data.firstSide + data.secondSide));\r\n  },\r\n\r\n  suqares: function (data) {\r\n    const p = (data.firstSide + data.secondSide + data.thirdSide) / 2;\r\n\r\n    return Math.sqrt(p * (p - data.firstSide) * (p - data.secondSide) * (p - data.thirdSide));\r\n  },\r\n\r\n  compareTriangles: function (triangle1, triangle2) {\r\n    return triangle1.square - triangle2.square;\r\n  }\r\n};\r\n\r\nexport default functions;","const functions = {\r\n  isPalindrome: function (sub) {\r\n    const len = sub.length - 1;\r\n    for (let i = 0; i < len / 2; i++) {\r\n      if (sub[i] !== sub[len - i]) {\r\n        return false\r\n      }\r\n    }\r\n    return true;\r\n  },\r\n\r\n  palindromeExtraction: function (str) {\r\n    let palindroms = [];\r\n    let substring;\r\n    for (let i = 0; i < str.length; i++) {\r\n      substring = str.charAt(i);\r\n      for (let j = i + 1; j < str.length; j++) {\r\n        substring += str.charAt(j);\r\n        if (this.isPalindrome(substring)) {\r\n          palindroms.push(substring);\r\n        }\r\n      }\r\n    }\r\n    return palindroms.sort((a, b) => b.length - a.length);\r\n  }\r\n};\r\n\r\nexport default functions;","import React, {Component} from 'react';\r\nimport functions from './functions';\r\n\r\nexport default class extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      triangle: {},\r\n      triangles: [],\r\n      isValidInputs: false\r\n\r\n    };\r\n  }\r\n\r\n  showResult = () => {\r\n    let res = this.state.triangles.sort(functions.compareTriangles);\r\n    console.log(res);\r\n  };\r\n\r\n  addTriangle = () => {\r\n    if (this.state.isValidInputs && this.isTriangleValidName(this.state.triangle.triangleName)) {\r\n      const triangle = this.state.triangle;\r\n      if (functions.checkTriangle(triangle)) {\r\n        this.setState({\r\n          triangles: [...this.state.triangles, {\r\n            name: this.state.triangle.triangleName,\r\n            square: functions.suqares(triangle)\r\n          }]\r\n        }, this.showResult);\r\n\r\n      } else {\r\n        console.log(\"this triangle does not exist\");\r\n      }\r\n    } else {\r\n      console.log(\"please enter valid values\");\r\n    }\r\n  };\r\n\r\n  onNameChange = (event) => {\r\n    const triangleName = event.target.value;\r\n    if (this.isTriangleValidName(triangleName)) {\r\n      this.setState({\r\n        triangle: {\r\n          ...this.state.triangle,\r\n          triangleName: event.target.value\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  onSideChange = (event) => {\r\n    const triangleSide = event.target.name;\r\n    if (this.isTriangleValidSide(event.target.value)) {\r\n      this.setState({\r\n        triangle: {\r\n          ...this.state.triangle,\r\n          [triangleSide]: parseInt(event.target.value)\r\n        }\r\n      });\r\n      this.setState({isValidInputs: true});\r\n    } else {\r\n      this.setState({isValidInputs: false});\r\n    }\r\n  };\r\n\r\n  isTriangleValidName = (str) => {\r\n    return str.length === 3 && str.match(/[a-z]/i);\r\n  };\r\n\r\n  isTriangleValidSide = (num) => {\r\n    return isFinite(num);\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"task3-container\">\r\n        <span>3 letters - triangle name</span>\r\n        <input type=\"text\"\r\n               className=\"triangle-name\"\r\n               placeholder=\"Triangle name\"\r\n               onChange={this.onNameChange}/>\r\n        <span>sides - only numbers</span>\r\n        <input type=\"text\"\r\n               name=\"firstSide\"\r\n               className=\"triangle-side\"\r\n               placeholder=\"Triangle side A\"\r\n               onChange={this.onSideChange}/>\r\n        <input type=\"text\"\r\n               name=\"secondSide\"\r\n               className=\"triangle-side\"\r\n               placeholder=\"Triangle side B\"\r\n               onChange={this.onSideChange}/>\r\n        <input type=\"text\"\r\n               name=\"thirdSide\"\r\n               className=\"triangle-side\"\r\n               placeholder=\"Triangle side C\"\r\n               onChange={this.onSideChange}/>\r\n        <input className=\"sendTriangle\"\r\n               type=\"button\"\r\n               value=\"Add\"\r\n               onClick={this.addTriangle}/>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\n","import Task4 from './task4';\r\n\r\nexport default Task4;","import React, {Component} from 'react';\r\nimport functions from './functions';\r\n\r\nexport default class extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      palindrome: ''\r\n    };\r\n  }\r\n\r\n  showResult = () => {\r\n    if(this.state.palindrome !== null) {\r\n      console.log(functions.palindromeExtraction(this.state.palindrome));\r\n    }\r\n  };\r\n\r\n  onInputChange = (event) => {\r\n    if (this.isPalindromeValid(event.target.value)){\r\n      this.setState({palindrome: event.target.value});\r\n    }else{\r\n      console.log(\"please input only positive ineger numbers\");\r\n      this.setState({palindrome: null});\r\n    }\r\n  };\r\n\r\n\r\n  isPalindromeValid = (str) => {\r\n    return str.match(/^\\d+$/);\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"task3-container\">\r\n        <span>Palindrome</span>\r\n        <input type=\"text\"\r\n               className=\"triangle-name\"\r\n               placeholder=\"input palindrome\"\r\n               onChange={this.onInputChange}/>\r\n        <input className=\"sendTriangle\"\r\n               type=\"button\"\r\n               value=\"Check\"\r\n               onClick={this.showResult}/>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\n","import Main from './main';\r\n\r\nexport default Main;","import React, {Component} from 'react';\r\nimport Task3 from '../task3';\r\nimport Task4 from '../task4';\r\n\r\n\r\nexport default class extends Component {\r\n\r\n  render(){\r\n\r\n    return (\r\n      <div className=\"elementary-task\">\r\n        <Task4 />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './scss/style.scss';\r\n\r\n\r\n\r\nimport Main from './components/main';\r\n\r\nReactDOM.render(<Main />,\r\n  document.getElementById('root'));"],"sourceRoot":""}