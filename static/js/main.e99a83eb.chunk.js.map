{"version":3,"sources":["store.js","components/todo-input/todo-input.js","components/todo-item/todo-item.js","components/todo-list/todo-list.js","components/footer/footer.js","containers/todo/todo.js","actions/actionCreator.js","constants.js","components/title/title.js","components/app/App.js","reducers/tasks.js","reducers/filters.js","reducers/index.js","index.js"],"names":["preloadedState","ToDoInput","_ref","value","onChange","onKeyPress","react_default","a","createElement","className","placeholder","ToDoItem","text","isCompleted","removeTask","id","completeTask","onClick","ToDoList","tasksList","map","_ref2","todo_item_todo_item","key","FILTERS_BTN","Footer","amount","activeFilter","changeFilter","concat","ToDo","state","taskText","handleInputChange","target","_this","setState","addTask","length","props","Date","getTime","filterTasks","tasks","filter","task","getActiveTasksCounter","this","_this$props","filters","isTasksExist","filteredTasks","taskCounter","todo_input_todo_input","todo_list_todo_list","footer_footer","Component","connect","_ref3","type","Title","title","App","react","components_title_title","todo_todo","TASKS","arguments","undefined","Object","toConsumableArray","rootReducer","combineReducers","store","createStore","ReactDOM","render","es","app_App","document","getElementById"],"mappings":"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","file":"static/js/main.e99a83eb.chunk.js","sourcesContent":["import { createStore} from 'redux';\r\nimport rootReducer from './reducers/index';\r\n\r\nconst configureStore = preloadedState => (\r\n  createStore(\r\n    rootReducer,\r\n    preloadedState\r\n  )\r\n);\r\n\r\nconst store = configureStore({});\r\n\r\nexport default store;\r\n","import React from 'react';\r\n\r\nimport './todo-input.scss';\r\n\r\nconst ToDoInput = ({ value, onChange, onKeyPress }) => (\r\n  <div className=\"todo-input-wrapper\">\r\n    <i className=\"fas fa-plus\" />\r\n    <input\r\n      className=\"todo-input\"\r\n      placeholder=\"Click to add task\"\r\n      onChange={onChange}\r\n      value={value}\r\n      onKeyPress={onKeyPress}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default ToDoInput;","import React from 'react';\r\n\r\nimport './todo-item.scss';\r\n\r\nconst ToDoItem = ({ text, isCompleted, removeTask, id, completeTask }) => (\r\n  <li className=\"todo-item\">\r\n    <i onClick={() => completeTask(id)} className={isCompleted ? 'mark far fa-check-circle' : 'mark far fa-circle'} />\r\n    <span className={isCompleted ? 'completed text' : 'text'}>{text}</span>\r\n    <i onClick={() => removeTask(id)} className=\"fas fa-times\" />\r\n  </li>\r\n);\r\n\r\nexport default ToDoItem;","import React from 'react';\r\n\r\nimport ToDoItem from '../todo-item/todo-item';\r\n\r\nimport './todo-list.scss';\r\n\r\nconst ToDoList = ({ tasksList, removeTask, completeTask }) => (\r\n  <ul className=\"todo-list\">\r\n    {tasksList.map(({ id, text, isCompleted }) => (\r\n      <ToDoItem completeTask={completeTask} removeTask={removeTask} id={id} key={id} text={text} isCompleted={isCompleted} />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default ToDoList;","import React from 'react';\r\n\r\nimport './footer.scss';\r\n\r\nconst FILTERS_BTN = [\r\n  {\r\n    text: 'All',\r\n    id: 'all',\r\n  },\r\n  {\r\n    text: 'Active',\r\n    id: 'active',\r\n  },\r\n  {\r\n    text: 'Completed',\r\n    id: 'completed'\r\n  }\r\n];\r\n\r\nconst Footer = ({ amount, activeFilter, changeFilter }) => (\r\n  <div className=\"footer\">\r\n    <span className=\"amount\">{`${amount} Tasks left`}</span>\r\n    <div className=\"btn-group\">\r\n      {FILTERS_BTN.map(({ text, id }) => (\r\n        <button\r\n          onClick={() => {changeFilter(id)}}\r\n          key={id}\r\n          className={id === activeFilter ? \"filter-btn active\" : 'filter-btn'}\r\n        >{text}</button>\r\n      ))}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { addTask, removeTask, completeTask, changeFilter } from '../../actions/actionCreator';\r\n\r\nimport ToDoInput from '../../components/todo-input/todo-input';\r\nimport ToDoList from '../../components/todo-list/todo-list';\r\nimport Footer from '../../components/footer/footer';\r\n\r\nimport './todo.scss';\r\n\r\nclass ToDo extends Component {\r\n\r\n  state = {\r\n    taskText: '',\r\n  };\r\n\r\n  handleInputChange = ({ target: { value } }) => {\r\n    this.setState({\r\n      taskText: value,\r\n    })\r\n  };\r\n\r\n  addTask = ({ key }) => {\r\n    const { taskText } = this.state;\r\n\r\n    if (taskText.length > 2 && key === 'Enter') {\r\n      const { addTask } = this.props;\r\n      addTask((new Date()).getTime(), taskText, false);\r\n      this.setState({\r\n        taskText: '',\r\n      });\r\n    }\r\n  };\r\n\r\n  filterTasks = (tasks, activeFilter) => {\r\n    switch (activeFilter) {\r\n      case 'completed':\r\n        return tasks.filter(task => task.isCompleted);\r\n      case 'active':\r\n        return tasks.filter(task => !task.isCompleted);\r\n      default:\r\n        return tasks;\r\n    }\r\n  };\r\n\r\n  getActiveTasksCounter = tasks => tasks.filter(task => !task.isCompleted).length;\r\n\r\n  render() {\r\n    const { taskText } = this.state;\r\n    const { tasks, removeTask, completeTask, filters, changeFilter } = this.props;\r\n    const isTasksExist = tasks && tasks.length > 0;\r\n    const filteredTasks = this.filterTasks(tasks, filters);\r\n    const taskCounter = this.getActiveTasksCounter(tasks);\r\n\r\n    return (\r\n      <div className=\"todo-wrapper\">\r\n        <ToDoInput onKeyPress={this.addTask} onChange={this.handleInputChange} value={taskText} />\r\n        {isTasksExist && <ToDoList completeTask={completeTask} tasksList={filteredTasks} removeTask={removeTask} />}\r\n        {isTasksExist && <Footer changeFilter={changeFilter} amount={taskCounter} activeFilter={filters} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(({ tasks, filters }) => ({\r\n  tasks,\r\n  filters,\r\n}), { addTask, removeTask, completeTask, changeFilter })(ToDo);","import { ADD_TASK, REMOVE_TASK, COMPLETE_TASK, CHANGE_FILTER } from '../constants';\r\n\r\nexport const addTask = (id, text, isCompleted) => ({\r\n  type: ADD_TASK,\r\n  id,\r\n  text,\r\n  isCompleted\r\n});\r\n\r\nexport const removeTask = id => ({\r\n  type: REMOVE_TASK,\r\n  id\r\n});\r\n\r\nexport const completeTask = id => ({\r\n  type: COMPLETE_TASK,\r\n  id\r\n});\r\n\r\nexport const changeFilter = activeFilter => ({\r\n  type: CHANGE_FILTER,\r\n  activeFilter,\r\n});","export const ADD_TASK = 'ADD_TASK';\r\nexport const REMOVE_TASK = 'REMOVE_TASK';\r\nexport const COMPLETE_TASK = 'COMPLETE_TASK';\r\nexport const CHANGE_FILTER = 'CHANGE_FILTER';","import React from 'react';\r\n\r\nimport './title.scss';\r\n\r\nconst Title = ({ title }) => (\r\n  <h1 className=\"title\">{title}</h1>\r\n);\r\n\r\nexport default Title;","import React, { Fragment } from 'react';\n\nimport ToDo from '../../containers/todo/todo';\nimport Title from '../../components/title/title';\n\nconst App = () => (\n  <Fragment>\n    <Title title=\"ToDo App\" />\n    <ToDo />\n  </Fragment>\n);\n\nexport default App;","import {ADD_TASK, REMOVE_TASK, COMPLETE_TASK} from '../constants';\r\n\r\n\r\nconst TASKS = {};\r\n\r\nTASKS.tasks = [\r\n  {\r\n    id: 1,\r\n    text: 'Learn ReactJS',\r\n    isCompleted: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    text: 'Learn Angular 7',\r\n    isCompleted: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    text: 'Learn Vuejs',\r\n    isCompleted: false,\r\n  }\r\n];\r\n\r\nconst tasks = (state = TASKS.tasks, {id, text, isCompleted, type}) => {\r\n  switch (type) {\r\n    case ADD_TASK :\r\n      return [\r\n        ...state, {\r\n          id,\r\n          text,\r\n          isCompleted,\r\n        }\r\n      ];\r\n\r\n    case REMOVE_TASK:\r\n      return [...state].filter(task => task.id !== id);\r\n\r\n    case COMPLETE_TASK:\r\n      return [...state].map(task => {\r\n        if (task.id === id) {\r\n          task.isCompleted = !task.isCompleted;\r\n        }\r\n        return task;\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default tasks;","import { CHANGE_FILTER } from '../constants';\r\n\r\nconst BASE_FILTER = 'all';\r\n\r\nconst filter = (state = BASE_FILTER, { type, activeFilter }) => {\r\n  switch (type) {\r\n    case CHANGE_FILTER:\r\n      return activeFilter;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default filter;","import { combineReducers } from 'redux';\r\nimport tasks from './tasks';\r\nimport filters from './filters';\r\n\r\nconst rootReducer = combineReducers({ tasks, filters });\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App.js';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport './style.scss';\n\nReactDOM.render((\n  <Provider store={store}>\n    <App />\n  </Provider>\n), document.getElementById('root'));\n"],"sourceRoot":""}